/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.keyan.struts.action;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.keyan.hibernate.dao.ModeDao;
import com.keyan.hibernate.form.Keyanuser;
import com.keyan.hibernate.form.Mode;
import com.keyan.struts.form.ModeForm;

/**
 * MyEclipse Struts Creation date: 10-05-2010
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/thesis" name="thesisForm" input="/thesis.jsp"
 *                parameter="method" scope="request" validate="true"
 */
public class ModeAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if (request.getSession().getAttribute("keyanuser") == null) {
			return mapping.findForward("logout");
		}
		ModeForm modeForm = (ModeForm) form;// TODO Auto-generated method stub
		String method = (String) request.getParameter("method");
		ActionErrors errors = new ActionErrors();
		ActionForward forward = new ActionForward();
		ServletContext context = this.servlet.getServletContext();
		List list = new ArrayList();
		Mode mode = new Mode();

		ModeDao modeDao = new ModeDao();
		HttpSession sesssion = request.getSession();

		// 权限是2
		if (method.equals("query119")) {
			String wd = request.getParameter("wd");

			try {
				Keyanuser keyanuser = new Keyanuser();
				keyanuser = (Keyanuser) request.getSession().getAttribute(
						"keyanuser");

				if (wd != null) {

					if (keyanuser.getUserclasify().equals("0")) {
						// 科研人员
						list = modeDao.queryBy(wd, keyanuser.getUserclasify());
					} else if (keyanuser.getUserclasify().equals("1")) {
						// 院科研秘书
						list = modeDao.queryBy(wd, keyanuser.getUserclasify());
					} else {
						// 校科研秘书

						list = modeDao.queryBy(wd, keyanuser.getUserclasify());
					}

				} else {
					if (keyanuser.getUserclasify().equals("0")) {
						// 科研人员
						list = modeDao.query(keyanuser.getUserclasify());
					} else if (keyanuser.getUserclasify().equals("1")) {
						// 院科研秘书
						list = modeDao.query(keyanuser.getUserclasify());
					} else {
						// 校科研秘书
						list = modeDao.query(keyanuser.getUserclasify());
					}
				}

				context.setAttribute("list", list);

				return mapping.findForward("query120");

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		}
		// 权限为0的智能模糊查询
		else if (method.equals("query33")) {

			String wd = request.getParameter("wd");

			try {

				String username = (String) request.getSession().getAttribute(
						"username");

				list = modeDao.queryByname(username, wd);

				context.setAttribute("list", list);

				return mapping.findForward("query120");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		} else if (method.equals("query331")) {

			String wd = request.getParameter("wd");

			try {
				Keyanuser keyanuser = (Keyanuser) request.getSession()
						.getAttribute("keyanuser");
				String userdept = keyanuser.getUserdept();

				list = modeDao.queryByunit(userdept, wd);

				context.setAttribute("list", list);

				return mapping.findForward("query120");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		}
		// 权限是0
		else if (method.equals("query117")) {

			Keyanuser keyanuser = (Keyanuser) sesssion
					.getAttribute("keyanuser");
			try {
				list = modeDao.queryByName(keyanuser.getUsername());
				context.setAttribute("list", list);
				return mapping.findForward("query120");
			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		}
		
		// 权限为1的审核
		else if (method.equals("update1")) {
			String id = request.getParameter("id");
			mode = modeDao.queryId(new Integer(id));
			Keyanuser keyanuser = new Keyanuser();
			keyanuser = (Keyanuser) request.getSession().getAttribute(
					"keyanuser");

			if (keyanuser.getUserclasify().equals("0")) {
				// work.setWScore(1);
			} else if (keyanuser.getUserclasify().equals("1")) {
				if (mode.getJFScore().equals("未审核"))
					mode.setJFScore("院审通过");
			} else {
				mode.setJFScore("校审通过");
			}

			modeDao.update1(mode);

			String url = "mode.do?method=query118";
			forward.setPath(url);
			forward.setRedirect(true);

			return forward;
		} else if (method.equals("update2")) {
			String id = request.getParameter("id");
			mode = modeDao.queryId(new Integer(id));
			Keyanuser keyanuser = new Keyanuser();
			keyanuser = (Keyanuser) request.getSession().getAttribute(
					"keyanuser");

			if (keyanuser.getUserclasify().equals("0")) {
				// work.setWScore(1);
			} else if (keyanuser.getUserclasify().equals("1")) {
				if (mode.getJFScore().equals("未审核"))
					mode.setJFScore("院审通过");
			} else {
				mode.setJFScore("校审通过");
			}

			modeDao.update1(mode);

			String url = "mode.do?method=query119";
			forward.setPath(url);
			forward.setRedirect(true);

			return forward;

		}
		// 权限是1
		else if (method.equals("query118")) {
			Keyanuser keyanuser = (Keyanuser) sesssion
					.getAttribute("keyanuser");
			try {
				list = modeDao.queryByUserdept(keyanuser.getUserdept());
				context.setAttribute("list", list);
				return mapping.findForward("query120");
			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		}

		else if (method.equals("detele1")) {
			try {

				String id = request.getParameter("id");

				modeDao.delete(new Integer(id));

				String url = "mode.do?method=query119";
				forward = new ActionForward(url);
				forward.setPath(url);
				forward.setRedirect(true);
				return forward;

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		}
		// 系领导删除
		else if (method.equals("detele2")) {
			try {

				String id = request.getParameter("id");

				modeDao.delete(new Integer(id));

				String url = "mode.do?method=query118";
				forward = new ActionForward(url);
				forward.setPath(url);
				forward.setRedirect(true);
				return forward;

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		}
		// 校领导删除
		else if (method.equals("detele3")) {
			try {

				String id = request.getParameter("id");

				modeDao.delete(new Integer(id));

				String url = "mode.do?method=query119";
				forward = new ActionForward(url);
				forward.setPath(url);
				forward.setRedirect(true);
				return forward;

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		}
		// 修改
		else if (method.equals("query1")) {
			try {

				String id = request.getParameter("id");

				mode = modeDao.queryId(new Integer(id));

				context.setAttribute("mode", mode);

				return mapping.findForward("query2");

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		}
		// // --------------增加----------
		else if (method.equals("insert")) {
			String filePath = null;
			String path = null;
			String url = null;
			Date d = new Date();
			mode.setJFName(modeForm.getJf_name());// 负责人
			mode.setFenlei(modeForm.getFenlei());// 分类
			mode.setXmjingfei(modeForm.getXmjingfei());
			mode.setPici(modeForm.getPici());
			mode.setrenyuan(modeForm.getRenyuan());
			mode.setTime(d);
			mode.setBeizhu(modeForm.getBeizhu());
			mode.setBokuanzt(modeForm.getBokuanzt());
			mode.setXmname(modeForm.getXmname());
			mode.setJFScore("未审核");
			mode.setMusernum(modeForm.getMusernum());
			modeDao.insert(mode);
			context.setAttribute("status", "addsuccess");
			url = "mode.do?method=query117";
			forward = new ActionForward(url);
			forward.setPath(url);
			forward.setRedirect(true);
			return forward;		
		}

		if (method.equals("add")) {
			System.out.println("------");
			return mapping.findForward("add");
		}
		if (method.equals("update")) {

			modeDao.update(modeForm);

			context.setAttribute("status", "updatesuccess");
			String url = "mode.do?method=query117";
			forward = new ActionForward(url);
			forward.setPath(url);
			forward.setRedirect(true);
			return forward;
		}

		return null;
	}
}