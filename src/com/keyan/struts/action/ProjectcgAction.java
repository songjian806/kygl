/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.keyan.struts.action;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import com.keyan.hibernate.dao.ProjectcgDao;
import com.keyan.hibernate.form.Keyanuser;
import com.keyan.hibernate.form.Projectcg;
import com.keyan.struts.form.ProjectcgForm;

/**
 * MyEclipse Struts Creation date: 10-05-2010
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/Projectcg" name="ProjectcgForm" input="/Projectcg.jsp"
 *                parameter="method" scope="request" validate="true"
 */
public class ProjectcgAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		if (request.getSession().getAttribute("keyanuser") == null) {
			return mapping.findForward("logout");
		}

		ProjectcgForm projectcgForm = (ProjectcgForm) form;
		String method = (String) request.getParameter("method");
		ActionErrors errors = new ActionErrors();
		ActionForward forward = new ActionForward();
		ServletContext context = this.servlet.getServletContext();
		List list = new ArrayList();
		Projectcg projectcg = new Projectcg();

		ProjectcgDao projectcgDao = new ProjectcgDao();

		HttpSession sesssion = request.getSession();

		if (method.equals("query4")) {

			String wd = request.getParameter("wd");
			try {
				Keyanuser keyanuser = new Keyanuser();
				keyanuser = (Keyanuser) request.getSession().getAttribute(
						"keyanuser");

				if (wd != null) {
					if (keyanuser.getUserclasify().equals("0")) {
						// 科研人员
						list = projectcgDao.queryBy(wd,
								keyanuser.getUserclasify());
					} else if (keyanuser.getUserclasify().equals("1")) {
						// 院科研秘书
						list = projectcgDao.queryBy(wd,
								keyanuser.getUserclasify());
					} else {
						// 校科研秘书
						list = projectcgDao.queryBy(wd,
								keyanuser.getUserclasify());
					}

				} else {

					if (keyanuser.getUserclasify().equals("0")) {
						// 科研人员
						list = projectcgDao.query(keyanuser.getUserclasify());
					} else if (keyanuser.getUserclasify().equals("1")) {
						// 院科研秘书
						list = projectcgDao.query(keyanuser.getUserclasify());
					} else {
						// 校科研秘书
						list = projectcgDao.query(keyanuser.getUserclasify());
					}
				}

				context.setAttribute("list", list);

				return mapping.findForward("query1");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		} else if (method.equals("query33")) {

			String wd = request.getParameter("wd");

			try {

				String username = (String) request.getSession().getAttribute(
						"username");

				list = projectcgDao.queryByname(username, wd);

				context.setAttribute("list", list);

				return mapping.findForward("query1");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		} else if (method.equals("query331")) {

			String wd = request.getParameter("wd");

			try {
				Keyanuser keyanuser = (Keyanuser) request.getSession()
						.getAttribute("keyanuser");
				String userdept = keyanuser.getUserdept();

				list = projectcgDao.queryByunit(userdept, wd);

				context.setAttribute("list", list);

				return mapping.findForward("query1");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		}

		else if (method.equals("query31")) {

			Keyanuser keyanuser = (Keyanuser) sesssion
					.getAttribute("keyanuser");
			try {

				list = projectcgDao.queryByName(keyanuser.getUsername());

				context.setAttribute("list", list);

				return mapping.findForward("query1");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		}

		else if (method.equals("query41")) {

			try {
				String username = request.getParameter("byName");
				String dept = request.getParameter("byDept");
				String post = request.getParameter("byPost");

				String title = request.getParameter("byTitle");
				list = projectcgDao.queryByName(username, dept, post, title,
						request.getParameter("btime") + "-01-01",
						Integer.parseInt(request.getParameter("etime")) - 1
								+ "-12-31");

				context.setAttribute("list", list);

				return mapping.findForward("query1");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		} else if (method.equals("query441")) {

			try {
				String username = request.getParameter("byName");
				String dept = request.getParameter("byDept");
				String post = request.getParameter("byPost");

				String title = request.getParameter("byTitle");
				list = projectcgDao.queryByName1(username, dept, post, title,
						request.getParameter("btime") + "-01-01",
						Integer.parseInt(request.getParameter("etime")) - 1
								+ "-12-31");

				context.setAttribute("list", list);

				return mapping.findForward("query1");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		} else if (method.equals("query442")) {

			try {
				Keyanuser keyanuser = (Keyanuser) request.getSession()
						.getAttribute("keyanuser");
				String dept = keyanuser.getUserdept();
				String username = request.getParameter("byName");

				String post = request.getParameter("byPost");

				String title = request.getParameter("byTitle");
				list = projectcgDao.queryByName2(username, dept, post, title,
						request.getParameter("btime") + "-01-01",
						Integer.parseInt(request.getParameter("etime")) - 1
								+ "-12-31");

				context.setAttribute("list", list);

				return mapping.findForward("query1");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		} else if (method.equals("query443")) {

			try {
				String username = (String) request.getSession().getAttribute(
						"username");
				String dept = request.getParameter("byDept");
				String post = request.getParameter("byPost");

				String title = request.getParameter("byTitle");
				list = projectcgDao.queryByName3(username, dept, post, title,
						request.getParameter("btime") + "-01-01",
						Integer.parseInt(request.getParameter("etime")) - 1
								+ "-12-31");

				context.setAttribute("list", list);

				return mapping.findForward("query1");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		}

		// 更新
		else if (method.equals("update1")) {
			String id = request.getParameter("id");
			projectcg = projectcgDao.queryId(new Integer(id));
			Keyanuser keyanuser = new Keyanuser();
			keyanuser = (Keyanuser) request.getSession().getAttribute(
					"keyanuser");
			if (keyanuser.getUserclasify().equals("0")) {
				// work.setWScore(1);
			} else if (keyanuser.getUserclasify().equals("1")) {
				if (projectcg.getPScore().equals("未审核"))
					projectcg.setPScore("院审通过");
			} else {
				projectcg.setPScore("校审通过");
			}

			projectcgDao.update1(projectcg);

			String url = "projectcg.do?method=query32";
			forward.setPath(url);
			forward.setRedirect(true);

			return forward;

		}

		else if (method.equals("update2")) {
			String id = request.getParameter("id");
			projectcg = projectcgDao.queryId(new Integer(id));
			Keyanuser keyanuser = new Keyanuser();
			keyanuser = (Keyanuser) request.getSession().getAttribute(
					"keyanuser");
			if (keyanuser.getUserclasify().equals("0")) {
			} else if (keyanuser.getUserclasify().equals("1")) {
				if (projectcg.getPScore().equals("未审核"))
					projectcg.setPScore("院审通过");
			} else {
				projectcg.setPScore("校审通过");
			}

			projectcgDao.update1(projectcg);

			String url = "projectcg.do?method=query4";
			forward.setPath(url);
			forward.setRedirect(true);

			return forward;

		} else if (method.equals("query32")) {

			Keyanuser keyanuser = (Keyanuser) sesssion
					.getAttribute("keyanuser");
			try {

				list = projectcgDao.queryByUserdept(keyanuser.getUserdept());

				context.setAttribute("list", list);

				return mapping.findForward("query1");

			} catch (Exception e) {
				e.printStackTrace();
				return mapping.findForward("fail1");
			}
		} else if (method.equals("detele1")) {
			try {

				String id = request.getParameter("id");

				projectcgDao.delete(new Integer(id));

				String url = "projectcg.do?method=query31";
				forward = new ActionForward(url);
				forward.setPath(url);
				forward.setRedirect(true);
				return forward;

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		} else if (method.equals("detele2")) {
			try {

				String id = request.getParameter("id");

				projectcgDao.delete(new Integer(id));

				String url = "projectcg.do?method=query32";
				forward = new ActionForward(url);
				forward.setPath(url);
				forward.setRedirect(true);
				return forward;

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		} else if (method.equals("detele3")) {
			try {

				String id = request.getParameter("id");

				projectcgDao.delete(new Integer(id));

				String url = "projectcg.do?method=query4";
				forward = new ActionForward(url);
				forward.setPath(url);
				forward.setRedirect(true);
				return forward;

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		}

		else if (method.equals("query1")) {
			try {

				String id = request.getParameter("id");

				projectcg = projectcgDao.queryId(new Integer(id));

				context.setAttribute("projectcg", projectcg);

				return mapping.findForward("query2");

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		} else if (method.equals("queryinfo")) {
			try {

				String id = request.getParameter("id");

				projectcg = projectcgDao.queryId(new Integer(id));

				context.setAttribute("projectcg", projectcg);

				return mapping.findForward("queryinfo");

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		}

		else if (method.equals("insert")) {
			Keyanuser keyanuser = (Keyanuser) sesssion
					.getAttribute("keyanuser");
			String filePath = null;
			String path = null;
			String url = null;
			if (projectcgForm.getFile().getFileName().equals("")) {
				try {
					Date d = new Date();
					projectcg.setPName(projectcgForm.getPName());
					projectcg.setPPost(projectcgForm.getPPost());
					projectcg.setPDept(projectcgForm.getPDept());
					projectcg.setPTitle(projectcgForm.getPTitle());
					projectcg.setPUnit(projectcgForm.getPUnit());
					projectcg.setPId(projectcgForm.getPId());
					projectcg.setPTime(d);
					projectcg.setPScore("未审核");
					projectcg.setPRemarks(projectcgForm.getPRemarks());
					String pusernum = keyanuser.getUsername();
					projectcg.setPnum(pusernum);
					int num;
					if (!"".equals(projectcgForm.getPSecond().replace(" ", ""))) {
						num = 2;
						projectcg.setSecond(projectcgForm.getPSecond());
						pusernum = pusernum + ","
								+ projectcgForm.getPSecondnum();
						if (!"".equals(projectcgForm.getPThird().replace(" ",
								""))) {
							num = 3;
							projectcg.setThird(projectcgForm.getPThird());
							pusernum = pusernum + ","
									+ projectcgForm.getPThirdnum();
							if (!"".equals(projectcgForm.getPOthers().replace(
									" ", ""))) {

								num = 3 + projectcgForm.getPOthers().split("、").length;
								projectcg
										.setPOthers(projectcgForm.getPOthers());
								pusernum = pusernum + ","
										+ projectcgForm.getPOthersnum();
							} else {
								projectcg.setPOthers("无");
							}
						} else {
							projectcg.setPOthers("无");
							projectcg.setThird("无");
						}
						projectcg.setPMembers(num);
					} else {
						projectcg.setPOthers("无");
						projectcg.setSecond("无");
						projectcg.setThird("无");
						projectcg.setPMembers(1);
					}
					if (projectcgForm.getPRemarks().equals("国家级奖励一等奖")) {
						projectcg.setAchnum("12");

					} else if (projectcgForm.getPRemarks().equals("省级奖励一等奖")) {
						projectcg.setAchnum("12");

					} else if (projectcgForm.getPRemarks()
							.equals("地级优秀教学成果一等奖")) {
						projectcg.setAchnum("12");

					} else if (projectcgForm.getPRemarks()
							.equals("校级科研成果奖励一等奖")) {
						projectcg.setAchnum("12");

					}
					projectcg.setPusernum(pusernum);
					projectcgDao.insert(projectcg);
					context.setAttribute("status", "addsuccess");
					url = "projectcg.do?method=query31";
					forward = new ActionForward(url);
					forward.setPath(url);
					forward.setRedirect(true);

					return forward;

				} catch (Exception e) {
					return mapping.findForward("fail1");
				}
			} else {

				FormFile file = projectcgForm.getFile();// 获得文件
				String contentType = file.getContentType();// 获得文件类型
				String fileName = file.getFileName();// 获得文件名
				String file_type = fileName != null && !fileName.equals("") ? fileName
						.substring(fileName.lastIndexOf(".")) : "";// 获得文件后缀名
				file_type = file_type.toLowerCase();

				long FILE_SISE = 0x265480L;// 定义最大文件大小

				String size = file.getFileSize() + " bytes";
				if ((long) file.getFileSize() < FILE_SISE)// 判断文件大小
					try {
						InputStream stream = file.getInputStream();
						String newname = file.getFileName();
						filePath = this.getServlet().getServletContext()
								.getRealPath("/")
								+ "uploadImage/";// 定义上传路径
						File newfile = new File(filePath);
						if (!newfile.exists())
							newfile.mkdir();
						path = "uploadImage\\" + file_type;
						OutputStream bos = new FileOutputStream(filePath + "/"
								+ fileName);
						int bytesRead = 0;
						byte buffer[] = new byte[8192];
						while ((bytesRead = stream.read(buffer, 0, 8192)) != -1)
							bos.write(buffer, 0, bytesRead);

						bos.close();
						stream.close();

						Date d = new Date();
						projectcg.setPName(projectcgForm.getPName());
						projectcg.setPPost(projectcgForm.getPPost());
						projectcg.setPDept(projectcgForm.getPDept());
						projectcg.setPTitle(projectcgForm.getPTitle());
						projectcg.setPUnit(projectcgForm.getPUnit());
						projectcg.setPId(projectcgForm.getPId());
						projectcg.setPTime(d);
						projectcg.setPScore("未审核");
						projectcg.setPOthers(projectcgForm.getPOthers());
						projectcg.setPRemarks(projectcgForm.getPRemarks());

						projectcgDao.insert(projectcg);
						context.setAttribute("status", "addsuccess");
						url = "projectcg.do?method=query31";
						forward = new ActionForward(url);
						forward.setPath(url);
						forward.setRedirect(true);

						return forward;

					} catch (Exception e) {

						context.setAttribute("error", "文件上传出错");

						e.printStackTrace();
					}

			}

		}

		if (method.equals("update")) {
			Keyanuser keyanuser = (Keyanuser) sesssion
					.getAttribute("keyanuser");
			projectcgDao.update(projectcgForm, keyanuser.getUsername());

			context.setAttribute("status", "updatesuccess");
			String url = "projectcg.do?method=query31";
			forward = new ActionForward(url);
			forward.setPath(url);
			forward.setRedirect(true);
			return forward;
		}

		return null;
	}
}