/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.keyan.struts.action;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import com.keyan.hibernate.dao.InfoDAO;
import com.keyan.hibernate.form.Info;
import com.keyan.hibernate.form.Keyanuser;
import com.keyan.struts.form.InfoForm;

/**
 * MyEclipse Struts Creation date: 10-06-2010
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/info" name="infoForm" input="/fajian.jsp"
 *                parameter="method" scope="request" validate="true"
 * @struts.action-forward name="fail1" path="/fail.jsp" redirect="true"
 */
public class InfoAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if (request.getSession().getAttribute("keyanuser") == null) {
			return mapping.findForward("logout");
		}
		InfoForm infoForm = (InfoForm) form;// TODO Auto-generated method stub
		String method = (String) request.getParameter("method");
		ActionErrors errors = new ActionErrors();
		ActionForward forward = new ActionForward();
		ServletContext context = this.servlet.getServletContext();
		List list = new ArrayList();
		Info tbManager = new Info();
		InfoDAO managerDAO = new InfoDAO();
		Keyanuser keyanuser = null;

		String name = null;
		HttpSession session = request.getSession();
		String level = (String) session.getAttribute("level");

		keyanuser = (Keyanuser) session.getAttribute("keyanuser");
		name = keyanuser.getName();

		if (method.equals("query1")) {

			try {
				String type = request.getParameter("type");

				list = managerDAO.queryto(name);
				for (int i = 0; i < list.size(); i++) {
					Info info = (Info) list.get(i);
					managerDAO.update(info);

				}
				context.setAttribute("list", list);

				context.setAttribute("flag", "query1");				
				return mapping.findForward("infoList");
			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		}
		if (method.equals("query2")) {

			try {

				list = managerDAO.queryform(name);

				context.setAttribute("list", list);
				context.setAttribute("flag", "query2");				
				return mapping.findForward("query2");
			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		}

		else if (method.equals("insert")) {
			String filePath = null;
			String path = null;

			String url = null;
			Date d = new Date();

			if (infoForm.getFile().getFileName().equals("")) {

				try {

					tbManager.setInfoform(infoForm.getInfoform());
					tbManager.setInfoto(infoForm.getInfoto());
					tbManager.setFujian("0");
					tbManager.setContext(infoForm.getContext());
					tbManager.setInfotime(d);

					managerDAO.insert(tbManager);
					context.setAttribute("status", "addsuccess");
					url = "info.do?method=query2";
					forward = new ActionForward(url);
					forward.setPath(url);
					forward.setRedirect(true);

					return forward;

				} catch (Exception e) {
					return mapping.findForward("fail1");
				}
			} else {

				Date dd = new Date();
				String pathj = "" + dd.getYear() + dd.getMonth() + dd.getDay()
						+ dd.getHours() + dd.getMinutes() + dd.getSeconds();
				FormFile file = infoForm.getFile();// 获得文件
				String contentType = file.getContentType();// 获得文件类型
				String fileName = file.getFileName();// 获得文件名
				String file_type = fileName != null && !fileName.equals("") ? fileName
						.substring(fileName.lastIndexOf(".")) : "";// 获得文件后缀名
				file_type = file_type.toLowerCase();

				long FILE_SISE = 0x265480L;// 定义最大文件大小

				String size = file.getFileSize() + " bytes";
				if ((long) file.getFileSize() < FILE_SISE)// 判断文件大小
					try {

						InputStream stream = file.getInputStream();
						String newname = file.getFileName();
						filePath = this.getServlet().getServletContext()
								.getRealPath("/")
								+ "uploadImage/";// 定义上传路径
						File newfile = new File(filePath);
						if (!newfile.exists())
							newfile.mkdir();
						path = "uploadImage\\" + file_type;

						OutputStream bos = new FileOutputStream(filePath + "/"
								+ pathj + file_type);
						int bytesRead = 0;
						byte buffer[] = new byte[8192];
						while ((bytesRead = stream.read(buffer, 0, 8192)) != -1)
							bos.write(buffer, 0, bytesRead);

						bos.close();
						stream.close();

						tbManager.setInfoform(infoForm.getInfoform());
						tbManager.setInfoto(infoForm.getInfoto());
						tbManager.setFujian(filePath + "/" + pathj + file_type);
						tbManager.setContext(infoForm.getContext());
						tbManager.setInfotime(d);

						managerDAO.insert(tbManager);
						context.setAttribute("status", "addsuccess");
						url = "info.do?method=query2";
						forward = new ActionForward(url);
						forward.setPath(url);
						forward.setRedirect(true);

						return forward;

					} catch (Exception e) {

						context.setAttribute("error", "文件上传出错");

						e.printStackTrace();
						return mapping.findForward("fail1");
					}

			}
		} else if (method.equals("detele1")) {
			try {
				String url = null;
				String id = request.getParameter("id");

				managerDAO.delete(new Integer(id));

				url = "info.do?method=query1";
				forward = new ActionForward(url);
				forward.setPath(url);
				forward.setRedirect(true);

				return forward;

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		} else if (method.equals("detele2")) {
			try {
				String url = null;
				String id = request.getParameter("id");

				managerDAO.delete(new Integer(id));

				url = "info.do?method=query2";
				forward = new ActionForward(url);
				forward.setPath(url);
				forward.setRedirect(true);

				return forward;

			} catch (Exception e) {
				return mapping.findForward("fail1");
			}
		}

		return null;
	}
}